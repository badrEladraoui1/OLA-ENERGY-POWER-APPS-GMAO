"'New Report Screen' As screen.'autoLayout_HeaderFooter_ver1.0'":
    BackgroundImage: =
    Fill: =RGBA(0, 78, 152, 1)
    LoadingSpinnerColor: =App.Theme.Colors.Primary

    "'Main Screen Container' As groupContainer.verticalAutoLayoutContainer":
        DropShadow: =DropShadow.Light
        Fill: =RGBA(0, 78, 152, 1)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =10
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowX: =LayoutOverflow.Scroll
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingBottom: =16
        PaddingLeft: =16
        PaddingRight: =16
        PaddingTop: =16
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =1

        "'New Repport  HeaderContainer' As groupContainer.horizontalAutoLayoutContainer":
            DropShadow: =DropShadow.Light
            Fill: =RGBA(255, 103, 0, 1)
            FillPortions: =0
            Height: =75
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =30
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =2

            "'Image form' As image":
                BorderColor: =App.Theme.Colors.Darker40
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Image: =form_profile_image
                ZIndex: =1

            "'TextCanvas new rapport' As Text":
                AutoHeight: =true
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =RGBA(255, 255, 255, 1)
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                Size: =20
                Text: ="New Repport Form"
                Weight: ='TextCanvas.Weight'.Bold
                Width: =200
                X: =0
                Y: =0
                ZIndex: =2

        "'New Repport MainContainer' As groupContainer.verticalAutoLayoutContainer":
            DropShadow: =DropShadow.Semibold
            Fill: =RGBA(58, 110, 165, 1)
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutWrap: =true
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =3

            "'Canvas Scrollable' As fluidGrid.fluidGridWithBlankCard":
                AcceptsFocus: =false
                BorderThickness: =0
                FillPortions: =0
                Height: =Parent.Height - Self.Y
                LayoutMinHeight: =350
                LayoutMinWidth: =100
                SnapToColumns: =false
                Width: =Parent.Width
                Y: =//RectQuickActionBar2.Y + RectQuickActionBar2.Height
                ZIndex: =3

                "'DataCard Basic infos' As dataCard":
                    BorderColor: =RGBA(0, 0, 0, 1)
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =0
                    DisplayMode: =DisplayMode.Edit
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =200
                    Width: =Parent.Width
                    WidthFit: =true
                    X: =0
                    Y: =0
                    ZIndex: =1

                    "'Basic Infos Container_1' As groupContainer.horizontalAutoLayoutContainer":
                        DropShadow: =DropShadow.Light
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =10
                        RadiusBottomLeft: =4
                        RadiusBottomRight: =4
                        RadiusTopLeft: =4
                        RadiusTopRight: =4
                        Width: =Parent.Width
                        ZIndex: =1

                        "'Date intrev Container_1' As groupContainer.verticalAutoLayoutContainer":
                            DropShadow: =DropShadow.Light
                            FillPortions: =0
                            Height: =Parent.Height * 0.4
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            ZIndex: =1

                            "'Label date_1' As label":
                                BorderColor: =App.Theme.Colors.Darker40
                                Color: =RGBA(255, 255, 255, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =App.Theme.Font
                                FontWeight: =FontWeight.Bold
                                Size: =15
                                Text: ="📆 Date Of Intervention "
                                Width: =250
                                ZIndex: =1

                            "'DatePicker date_1' As datepicker":
                                AlignInContainer: =AlignInContainer.Center
                                BorderColor: =App.Theme.Colors.Darker40
                                CalendarHeaderFill: =App.Theme.Colors.Primary
                                Color: =RGBA(0, 0, 0, 1)
                                DateTimeZone: |
                                    =DateTimeZone.Local
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                FillPortions: =
                                Font: =App.Theme.Font
                                HoverDateFill: =App.Theme.Colors.Lighter70
                                IconBackground: =App.Theme.Colors.Primary
                                SelectedDateFill: =App.Theme.Colors.Primary
                                Width: |-
                                    =//Parent.Width * 0.4
                                    Parent.Width * 0.7
                                ZIndex: =3

                        "'Hours Container' As groupContainer.horizontalAutoLayoutContainer":
                            DropShadow: =DropShadow.Light
                            Height: =Parent.Height * 0.3
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            LayoutWrap: =true
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            ZIndex: =2

                            "'Heure debut Container_2' As groupContainer.verticalAutoLayoutContainer":
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.Light
                                Height: =Parent.Height * 0.2
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                ZIndex: =1

                                "'Label heure debut_2' As label":
                                    BorderColor: =App.Theme.Colors.Darker40
                                    Color: =RGBA(255, 255, 255, 1)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    Font: =App.Theme.Font
                                    FontWeight: =FontWeight.Bold
                                    Size: =15
                                    Text: =" 🕤 Start Time"
                                    Width: =200
                                    ZIndex: =1

                                "'TextInput heure debut_2' As text":
                                    Align: =Align.Center
                                    BorderColor: =App.Theme.Colors.Darker40
                                    BorderThickness: =2
                                    Color: =RGBA(0, 0, 0, 1)
                                    Default: =
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    DisabledFill: =RGBA(244, 244, 244, 1)
                                    FocusedBorderThickness: =4
                                    Font: =App.Theme.Font
                                    HintText: |-
                                        ="15:00"
                                    HoverBorderColor: =App.Theme.Colors.Darker40
                                    HoverColor: =RGBA(0, 0, 0, 1)
                                    HoverFill: =App.Theme.Colors.Lighter70
                                    OnChange: |-
                                        =UpdateContext(
                                            {
                                                isTimeDebutValid: IsMatch('TextInput heure debut_2'.Text, "^(?:[01]?\d|2[0-3]):[0-5]\d$")
                                            }
                                        );
                                    RadiusBottomLeft: =10
                                    RadiusBottomRight: =10
                                    RadiusTopLeft: =10
                                    RadiusTopRight: =10
                                    Size: =13
                                    Width: =Parent.Width * 0.7
                                    ZIndex: =2

                            "'Heure fin Container_2' As groupContainer.verticalAutoLayoutContainer":
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.Light
                                Height: =Parent.Height * 0.2
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                ZIndex: =2

                                "'Label heure fin_2' As label":
                                    BorderColor: =App.Theme.Colors.Darker40
                                    Color: =RGBA(255, 255, 255, 1)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    Font: =App.Theme.Font
                                    FontWeight: =FontWeight.Bold
                                    Size: =15
                                    Text: ="🕙 End Time "
                                    ZIndex: =1

                                "'TextInput heure fin_2' As text":
                                    Align: =Align.Center
                                    BorderColor: =App.Theme.Colors.Darker40
                                    BorderThickness: =2
                                    Color: =RGBA(0, 0, 0, 1)
                                    Default: =
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    DisabledFill: =RGBA(244, 244, 244, 1)
                                    FocusedBorderThickness: =4
                                    Font: =App.Theme.Font
                                    HintText: |-
                                        ="20:00"
                                    HoverBorderColor: =App.Theme.Colors.Darker40
                                    HoverColor: =RGBA(0, 0, 0, 1)
                                    HoverFill: =App.Theme.Colors.Lighter70
                                    OnChange: |-
                                        =UpdateContext(
                                            {
                                                isTimeFinValid: IsMatch('TextInput heure fin_2'.Text, "^(?:[01]?\d|2[0-3]):[0-5]\d$")
                                            }
                                        );
                                    RadiusBottomLeft: =10
                                    RadiusBottomRight: =10
                                    RadiusTopLeft: =10
                                    RadiusTopRight: =10
                                    Size: =13
                                    Width: =Parent.Width * 0.7
                                    ZIndex: =2

                "'DataCard Comlex infos' As dataCard.blankCard":
                    BorderColor: =RGBA(0, 0, 0, 1)
                    BorderStyle: =BorderStyle.Solid
                    DisplayMode: =
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Parent.Height * 1.35
                    Width: =Parent.Width
                    WidthFit: =true
                    X: =0
                    Y: =1
                    ZIndex: =2

                    "'Complex Infos Container_1' As groupContainer.verticalAutoLayoutContainer":
                        DropShadow: =DropShadow.Light
                        Height: =Parent.Height
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =10
                        PaddingLeft: =10
                        PaddingRight: =10
                        PaddingTop: =20
                        RadiusBottomLeft: =4
                        RadiusBottomRight: =4
                        RadiusTopLeft: =4
                        RadiusTopRight: =4
                        Width: =Parent.Width
                        Y: =27
                        ZIndex: =1

                        "'RH Container_1' As groupContainer.verticalAutoLayoutContainer":
                            AlignInContainer: =AlignInContainer.SetByContainer
                            DropShadow: =DropShadow.Light
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =20
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =250
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            ZIndex: =1

                            "'Label RH' As label":
                                Align: =Align.Center
                                AutoHeight: =true
                                BorderColor: =App.Theme.Colors.Darker40
                                Color: =RGBA(255, 255, 255, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =App.Theme.Font
                                FontWeight: =FontWeight.Bold
                                Size: =15
                                Text: ="👨🏻‍🏭Committed Human Resources "
                                Width: |
                                    =400
                                ZIndex: =1

                            "'Dropdown Fonctions_1' As dropdown":
                                BorderColor: =App.Theme.Colors.Darker40
                                ChevronBackground: =App.Theme.Colors.Primary
                                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                                ChevronHoverBackground: =App.Theme.Colors.Darker10
                                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                Font: =App.Theme.Font
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =App.Theme.Colors.Lighter70
                                Items: |-
                                    =//Distinct(Personnel_DB,Fonction)
                                    Personnel_Fonctions
                                PressedColor: =RGBA(255, 255, 255, 1)
                                PressedFill: =App.Theme.Colors.Darker30
                                SelectionFill: =App.Theme.Colors.Primary
                                Size: =13
                                Width: =Parent.Width * 0.7
                                ZIndex: =2

                            "'Dropdown. Staff Names_1' As dropdown":
                                BorderColor: =App.Theme.Colors.Darker40
                                ChevronBackground: =App.Theme.Colors.Primary
                                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                                ChevronHoverBackground: =App.Theme.Colors.Darker10
                                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                Font: =App.Theme.Font
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =App.Theme.Colors.Lighter70
                                Items: |
                                    =//Filter(Personnel_DB, Fonction = 'Dropdown Fonctions_1'.Selected.Value).'Nom complet'
                                    Filter(
                                        Personnel_DB,
                                        Fonction = 'Dropdown Fonctions_1'.Selected.'Personnel Fonctions' &&
                                        Not('Nom complet' in Concat(NameCollection, Value, ", "))
                                    )
                                PressedColor: =RGBA(255, 255, 255, 1)
                                PressedFill: =App.Theme.Colors.Darker30
                                SelectionFill: =App.Theme.Colors.Primary
                                Size: =13
                                Width: =Parent.Width * 0.7
                                ZIndex: =3

                            "'Container infos Rhs' As groupContainer.horizontalAutoLayoutContainer":
                                DropShadow: =DropShadow.Light
                                FillPortions: =0
                                Height: =50
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =10
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                ZIndex: =4

                                TextInput2 As text:
                                    BorderColor: =RGBA(255, 103, 0, 1)
                                    BorderStyle: =BorderStyle.Dashed
                                    BorderThickness: =4
                                    Color: =RGBA(0, 0, 0, 1)
                                    Default: |
                                        =Concat(NameCollection , Value , " / ")
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    DisabledFill: =RGBA(244, 244, 244, 1)
                                    DisplayMode: =DisplayMode.View
                                    Fill: =RGBA(180, 214, 250, 1)
                                    FocusedBorderThickness: =4
                                    Font: =App.Theme.Font
                                    FontWeight: =FontWeight.Semibold
                                    HoverBorderColor: =App.Theme.Colors.Darker40
                                    HoverColor: =RGBA(0, 0, 0, 1)
                                    HoverFill: =App.Theme.Colors.Lighter70
                                    RadiusBottomLeft: =20
                                    RadiusBottomRight: =20
                                    RadiusTopLeft: =20
                                    RadiusTopRight: =20
                                    Size: =13
                                    Width: =Parent.Width * 0.6
                                    ZIndex: =1

                                resetting As image:
                                    BorderColor: =App.Theme.Colors.Darker40
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledFill: =RGBA(244, 244, 244, 1)
                                    Height: =40
                                    Image: ='icons8-restart-480'
                                    OnSelect: =    Clear(NameCollection);
                                    Width: =40
                                    ZIndex: =2

                            "'add btn' As Button":
                                BasePaletteColor: =
                                BorderColor: =
                                DisplayMode: |
                                    =If(
                                        !IsBlank('Dropdown. Staff Names_1'.Selected),
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                FontColor: =
                                Height: =Parent.Height * 0.1
                                Icon: ="PeopleAdd"
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |+
                                    =Collect(
                                        NameCollection,
                                        'Dropdown. Staff Names_1'.Selected.'Nom complet'
                                    );
                                    
                                Text: ="Add More"
                                Width: |+
                                    =Parent.Width * 0.2
                                    
                                X: =0
                                Y: =0
                                ZIndex: =7

                        "'Pieces Container_1' As groupContainer.verticalAutoLayoutContainer":
                            DropShadow: =DropShadow.Light
                            Height: =300
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =10
                            LayoutJustifyContent: =LayoutJustifyContent.Center
                            LayoutMinHeight: =400
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            LayoutOverflowX: =LayoutOverflow.Scroll
                            LayoutOverflowY: =LayoutOverflow.Scroll
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            ZIndex: =2

                            "'Label equipement piece qte' As label":
                                Align: =Align.Center
                                BorderColor: =App.Theme.Colors.Darker40
                                Color: =RGBA(255, 255, 255, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =App.Theme.Font
                                FontWeight: =FontWeight.Bold
                                Size: =15
                                Text: ="⚙️ Equipment concerned "
                                Width: =250
                                ZIndex: =1

                            "'Dropdown Equipement' As dropdown":
                                BorderColor: =App.Theme.Colors.Darker40
                                ChevronBackground: =App.Theme.Colors.Primary
                                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                                ChevronHoverBackground: =App.Theme.Colors.Darker10
                                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                                Default: =
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                Font: =App.Theme.Font
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =App.Theme.Colors.Lighter70
                                Items: |-
                                    =/*Filter(
                                        Liste_Equipements,
                                        'Niveau d''arborescence' = "Equipement" && true
                                    )*/
                                    
                                    Sort(
                                        Filter(
                                            Liste_Equipements,
                                            'Niveau d''arborescence' = "Equipement" && true
                                        ),
                                        Codification, // or 'Désignation', depending on the column you want to sort by
                                        SortOrder.Ascending
                                    )
                                OnChange: |
                                    =Set(
                                        selectedDésignation,
                                        'Dropdown Equipement'.Selected.Désignation
                                    )
                                    ;
                                    Set(
                                        selectedCodification,
                                         'Dropdown Equipement'.Selected.Codification
                                    
                                    )
                                PressedColor: =RGBA(255, 255, 255, 1)
                                PressedFill: =App.Theme.Colors.Darker30
                                SelectionFill: =App.Theme.Colors.Primary
                                Size: =13
                                Width: =Parent.Width * 0.7
                                ZIndex: =2

                            "'Label equipement piece qte_1' As label":
                                Align: =Align.Center
                                BorderColor: =App.Theme.Colors.Darker40
                                Color: =RGBA(255, 255, 255, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =App.Theme.Font
                                FontWeight: =FontWeight.Bold
                                Size: =15
                                Text: ="🔩 Add spare part"
                                Width: =200
                                ZIndex: =3

                            "'Dropdown Piece' As dropdown":
                                BorderColor: =App.Theme.Colors.Darker40
                                ChevronBackground: =App.Theme.Colors.Primary
                                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                                ChevronHoverBackground: =App.Theme.Colors.Darker10
                                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                Font: =App.Theme.Font
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =App.Theme.Colors.Lighter70
                                Items: |
                                    =/*Filter(
                                        Liste_Equipements,
                                        'Niveau d''arborescence' = "Pièce" &&
                                        StartsWith(Codification, selectedCodification)
                                    ).Désignation
                                    */
                                    
                                    // Filter, distinct, and sort Désignation
                                    Sort(
                                        Distinct(
                                            Filter(
                                                Liste_Equipements,
                                                'Niveau d''arborescence' = "Pièce" &&
                                                StartsWith(Codification, selectedCodification)
                                            ),
                                            Désignation
                                        ),ThisRecord.Value,
                                        SortOrder.Ascending
                                    )
                                PaddingTop: =15
                                PressedColor: =RGBA(255, 255, 255, 1)
                                PressedFill: =App.Theme.Colors.Darker30
                                SelectionFill: =App.Theme.Colors.Primary
                                Size: =13
                                Width: =Parent.Width * 0.7
                                ZIndex: =4

                            "'Container infos Rhs_1' As groupContainer.horizontalAutoLayoutContainer":
                                DropShadow: =DropShadow.Light
                                FillPortions: =0
                                Height: =50
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =10
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                ZIndex: =5

                                TextInput2_1 As text:
                                    BorderColor: =RGBA(255, 103, 0, 1)
                                    BorderStyle: =BorderStyle.Dashed
                                    BorderThickness: =4
                                    Color: =RGBA(0, 0, 0, 1)
                                    Default: |
                                        =Concat(
                                            PieceCollection,
                                            Piece & " (" & Quantity & ")",
                                            " / "
                                        )
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    DisabledFill: =RGBA(244, 244, 244, 1)
                                    DisplayMode: =DisplayMode.View
                                    Fill: =RGBA(180, 214, 250, 1)
                                    FocusedBorderThickness: =4
                                    Font: =App.Theme.Font
                                    FontWeight: =FontWeight.Semibold
                                    HoverBorderColor: =App.Theme.Colors.Darker40
                                    HoverColor: =RGBA(0, 0, 0, 1)
                                    HoverFill: =App.Theme.Colors.Lighter70
                                    RadiusBottomLeft: =20
                                    RadiusBottomRight: =20
                                    RadiusTopLeft: =20
                                    RadiusTopRight: =20
                                    Size: =13
                                    Width: =Parent.Width * 0.6
                                    ZIndex: =1

                                resetting_1 As image:
                                    BorderColor: =App.Theme.Colors.Darker40
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledFill: =RGBA(244, 244, 244, 1)
                                    Height: =40
                                    Image: ='icons8-restart-480'
                                    OnSelect: =Clear(PieceCollection);
                                    Width: =40
                                    ZIndex: =2

                            "'TextInput qte piece' As text":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderThickness: =2
                                Color: =RGBA(0, 0, 0, 1)
                                Default: =
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                FocusedBorderThickness: =4
                                Font: =App.Theme.Font
                                FontWeight: =FontWeight.Bold
                                Format: =TextFormat.Number
                                HintText: ="Enter the quantity of the spare part"
                                HoverBorderColor: =App.Theme.Colors.Darker40
                                HoverColor: =RGBA(0, 0, 0, 1)
                                HoverFill: =App.Theme.Colors.Lighter70
                                RadiusBottomLeft: =10
                                RadiusBottomRight: =10
                                RadiusTopLeft: =10
                                RadiusTopRight: =10
                                Size: =13
                                Width: =Parent.Width * 0.5
                                ZIndex: =6

                            "'add btn_1' As Button":
                                BasePaletteColor: =
                                BorderColor: =
                                DisplayMode: |
                                    =/*If(
                                        !IsBlank('TextInput qte piece'.Text) && 
                                        Value('TextInput qte piece'.Text) > 0 && 
                                        !IsBlank('Dropdown Piece'.Selected),
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                    */
                                    If(
                                        !IsBlank('TextInput qte piece'.Text) && 
                                        Value('TextInput qte piece'.Text) > 0 && 
                                        !IsBlank('Dropdown Piece'.Selected) &&
                                        IsEmpty(
                                            Filter(
                                                PieceCollection,
                                                Piece = 'Dropdown Piece'.Selected.Value
                                            )
                                        ),
                                        DisplayMode.Edit, 
                                        DisplayMode.Disabled
                                    )
                                FontColor: =
                                Height: =Parent.Height * 0.1
                                Icon: ="DocumentAdd"
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |-
                                    =Collect(
                                        PieceCollection,
                                        {
                                            //Piece:'Dropdown Piece'.Selected.Désignation, // FIRST SOLUTION
                                            Piece:'Dropdown Piece'.Selected.Value, // Assuming DropdownPieces is your pieces dropdown
                                            Quantity: 'TextInput qte piece'.Text // Assuming TextInputQuantity is your quantity input box
                                        }
                                    );
                                    // Clear the quantity input after adding
                                    Reset('TextInput qte piece');
                                Text: ="Add More"
                                Width: |+
                                    =Parent.Width * 0.2
                                    
                                X: =0
                                Y: =0
                                ZIndex: =8

        "'New Repport  FooterContainer' As groupContainer.horizontalAutoLayoutContainer":
            DropShadow: =DropShadow.Light
            Fill: =RGBA(255, 103, 0, 1)
            FillPortions: =0
            Height: =75
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =20
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =4

            ButtonCanvas5 As Button:
                Appearance: ='ButtonCanvas.Appearance'.Secondary
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =Parent.Height * 0.7
                Icon: ="ArrowLeft"
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnSelect: =Navigate('User Activities Screen')
                Text: ="Go Back"
                Width: =Parent.Width * 0.30
                X: =0
                Y: =0
                ZIndex: =1

            ButtonCanvas7 As Button:
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =Parent.Height * 0.7
                Icon: ="ArrowReset"
                Layout: ='ButtonCanvas.Layout'.IconBefore
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnSelect: |-
                    =    Clear(NameCollection);
                        Clear(PieceCollection);
                        //Clear(MainRecord);
                        Reset('DatePicker date_1');
                        Reset('TextInput heure debut_2');
                        Reset('TextInput heure fin_2');
                Text: ="Reset Form"
                Width: =Parent.Width * 0.30
                X: =0
                Y: =0
                ZIndex: =2

            Button4 As button:
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =App.Theme.Colors.Primary
                DisabledBorderColor: =RGBA(244, 244, 244, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(0, 78, 152, 1)
                Font: =App.Theme.Font
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height * 0.7
                HoverBorderColor: =App.Theme.Colors.Darker10
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =App.Theme.Colors.Darker10
                OnSelect: |+
                    =SortingInterventionsFlow.Run(); // for sorting data changing the name after
                    
                    // Step 1: Concatenate Names, Pieces, and Quantities
                    /*Set(
                        ConcatenatedNames,
                        Concat(NameCollection, Value, Char(10))
                    );
                    Set(
                        ConcatenatedPieces,
                        Concat(PieceCollection, Piece, Char(10))
                    );
                    Set(
                        ConcatenatedQuantities,
                        Concat(PieceCollection, Quantity, Char(10))
                    );
                    // Step 2: Validation Checks
                    UpdateContext(
                        {
                            isTimeDebutValid: IsMatch('TextInput heure debut_1'.Text, "^(?:[01]?\d|2[0-3]):[0-5]\d$"),
                            isTimeFinValid: IsMatch('TextInput heure fin_1'.Text, "^(?:[01]?\d|2[0-3]):[0-5]\d$"),
                            isDurationValid: IsMatch('TextInput duree interv_1'.Text, "^((\d{1,2}:\d{2}h)|(\d{1,2}min))$"),
                            isNameCollectionValid: CountRows(NameCollection) > 0,
                            isPieceCollectionValid: CountRows(PieceCollection) > 0,
                            isAllInputsFilled: !IsBlank('DatePicker date_1'.SelectedDate) &&
                                              !IsBlank('TextInput heure debut_1'.Text) &&
                                              !IsBlank('TextInput heure fin_1'.Text) &&
                                              !IsBlank('TextInput duree interv_1'.Text) &&
                                              !IsBlank('Dropdown Equipement'.Selected)
                        }
                    );
                    // Step 3: Conditional Patch and Notifications
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isDurationValid && isNameCollectionValid && isPieceCollectionValid,
                        // All validations passed - Proceed with the Patch
                        Patch(
                            Rapport_Intervention_correctif,
                            Defaults(Rapport_Intervention_correctif),
                            {
                                'Date intervention': 'DatePicker date_1'.SelectedDate, 
                                'Heure de debut': 'TextInput heure debut_1'.Text,
                                'Heure de fin': 'TextInput heure fin_1'.Text, 
                                'Duree Intervention': 'TextInput duree interv_1'.Text, 
                                'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation,
                                'Ressources Humaines Assignees': ConcatenatedNames,
                                'Ressources Materielles Engagees': ConcatenatedPieces,
                                'Quantite  Materielles Engagees': ConcatenatedQuantities
                            }
                        );
                        // Clear Collections and Inputs after saving
                        Clear(NameCollection);
                        Clear(PieceCollection);
                        Reset('DatePicker date_1');
                        Reset('TextInput heure debut_1');
                        Reset('TextInput heure fin_1');
                        Reset('TextInput duree interv_1');
                        Notify("Data saved successfully!", NotificationType.Success)
                    ,
                        // Validation failed - Show corresponding notifications
                        If(
                            !isAllInputsFilled,
                            Notify("Please fill in all required fields.", NotificationType.Error),
                            !isTimeDebutValid,
                            Notify("Heure de début is not valid.", NotificationType.Error),
                            !isTimeFinValid,
                            Notify("Heure de fin is not valid.", NotificationType.Error),
                            !isDurationValid,
                            Notify("Durée d'intervention is not valid.", NotificationType.Error),
                            !isNameCollectionValid,
                            Notify("Please add at least one staff name.", NotificationType.Error),
                            !isPieceCollectionValid,
                            Notify("Please add at least one piece.", NotificationType.Error)
                        )
                    );
                    
                    */
                    /* last soltion
                    // Step 1: Concatenate Names, Pieces, and Quantities
                    Set(
                        ConcatenatedNames,
                        Concat(
                            NameCollection,
                            Value,
                            Char(10)
                        )
                    );
                    Set(
                        ConcatenatedPieces,
                        Concat(
                            PieceCollection,
                            Piece,
                            Char(10)
                        )
                    );
                    Set(
                        ConcatenatedQuantities,
                        Concat(
                            PieceCollection,
                            Quantity,
                            Char(10)
                        )
                    );
                    // Step 2: Validation Checks
                    UpdateContext(
                        {
                            isTimeDebutValid: IsMatch(
                                'TextInput heure debut_1'.Text,
                                "^(?:[01]?\d|2[0-3]):[0-5]\d$"
                            ),
                            isTimeFinValid: IsMatch(
                                'TextInput heure fin_1'.Text,
                                "^(?:[01]?\d|2[0-3]):[0-5]\d$"
                            ),
                            isDurationValid: IsMatch(
                                'TextInput duree interv_1'.Text,
                                "^((\d{1,2}:\d{2}h)|(\d{1,2}min))$"
                            ),
                            isNameCollectionValid: CountRows(NameCollection) > 0,
                            isPieceCollectionValid: CountRows(PieceCollection) > 0,
                            isAllInputsFilled: !IsBlank('DatePicker date_1'.SelectedDate) && !IsBlank('TextInput heure debut_1'.Text) && !IsBlank('TextInput heure fin_1'.Text) && !IsBlank('TextInput duree interv_1'.Text) && !IsBlank('Dropdown Equipement'.Selected)
                        }
                    );
                    // Step 3: Conditional Patch and Notifications
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isDurationValid && isNameCollectionValid && isPieceCollectionValid,
                        // All validations passed - Proceed with the Patch
                        Set(
                            NewReport,
                            Patch(
                                Rapport_Intervention_correctif,
                                Defaults(Rapport_Intervention_correctif),
                                {
                                    'Date intervention': 'DatePicker date_1'.SelectedDate,
                                    //'Heure de debut': 'TextInput heure debut_1'.Text,
                                    //'Heure de fin': 'TextInput heure fin_1'.Text,
                                    'Heure de debut': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_1'.Text),
                                    'Heure de fin': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_1'.Text),
                                    'Duree Intervention': 'TextInput duree interv_1'.Text,
                                    'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation,
                                    'Ressources Humaines Assignees': ConcatenatedNames,
                                    'Ressources Materielles Engagees': ConcatenatedPieces,
                                    'Quantite  Materielles Engagees': ConcatenatedQuantities
                                }
                            )
                        );
                        
                    );
                    // Check if Patch was successful and update the boolean variable accordingly
                    If(
                        !IsBlank(NewReport),
                        Set(
                            isCorrectifSubmitted,
                            true
                        ),
                        Set(
                            isCorrectifSubmitted,
                            false
                        )
                    );
                    // Clear Collections and Inputs after saving
                    If(
                        isCorrectifSubmitted,
                        Notify(
                            "Data saved successfully!",
                            NotificationType.Success
                        ),
                        Notify(
                            "Failed to save data.",
                            NotificationType.Error
                        );
                        
                    );
                        // Clear Collections and Inputs after saving
                    Clear(NameCollection);
                    Clear(PieceCollection);
                    Reset('DatePicker date_1');
                    Reset('TextInput heure debut_1');
                    Reset('TextInput heure fin_1');
                    Reset('TextInput duree interv_1');
                        // Validation failed - Show corresponding notifications
                    If(
                        !isAllInputsFilled,
                        Notify(
                            "Please fill in all required fields.",
                            NotificationType.Error
                        ),
                        !isTimeDebutValid,
                        Notify(
                            "Heure de début is not valid.",
                            NotificationType.Error
                        ),
                        !isTimeFinValid,
                        Notify(
                            "Heure de fin is not valid.",
                            NotificationType.Error
                        ),
                        !isDurationValid,
                        Notify(
                            "Durée d'intervention is not valid.",
                            NotificationType.Error
                        ),
                        !isNameCollectionValid,
                        Notify(
                            "Please add at least one staff name.",
                            NotificationType.Error
                        ),
                        !isPieceCollectionValid,
                        Notify(
                            "Please add at least one piece.",
                            NotificationType.Error
                        )
                    );
                    // OnSelect of the "Generate Report" Button
                    If(
                        isCorrectifSubmitted,
                        // Step 1: Get the Last Report
                        Set(
                            LastReport,
                            Last(Rapport_Intervention_correctif)
                        );
                        // Step 2: Check if LastReport is not blank and then Patch
                    If(
                            !IsBlank(LastReport),
                            Patch(
                                Generated_Repport,
                                Defaults(Generated_Repport),
                                {
                                    'Reference du rapport Intervention': LastReport.'Reference du rapport Intervention',
                                    'Ressources Materielles Engagees': ConcatenatedPieces,
                                    'Quantite  Materielles Engagees': ConcatenatedQuantities
                                }
                            );
                            Notify(
                                "Report generated successfully!",
                                NotificationType.Success
                            );
                            Set(
                                NewReport,
                                Blank()
                            )
                        ),
                        Notify(
                            "Corrective data has not been submitted.",
                            NotificationType.Error
                        )
                    );
                    
                     last soltion */ 
                    // Step 1: Get the last reference number from the last row in the Rapport_Intervention_correctif table
                    Set(
                        LastReference,
                        If(
                            IsBlank(Last(Rapport_Intervention_correctif).'Reference du rapport Intervention'),
                            1,// If no rows are found, start with 1
                    
                            // TESTING 
                    
                            //Last(Rapport_Intervention_correctif).'Reference du rapport Intervention'
                            Last(Rapport_Intervention_correctif).'Reference du rapport Intervention'
                    
                            // TESTING 
                        )
                    );
                    // Step 2: Increment the reference number for the new intervention
                    Set (
                        NewReferenceNumber,
                        LastReference + 1
                    );
                    // Step 3: Validation Checks
                    UpdateContext(
                        {
                            isTimeDebutValid: IsMatch(
                                'TextInput heure debut_2'.Text,
                                "^(?:[01]?\d|2[0-3]):[0-5]\d$"
                            ),
                            isTimeFinValid: IsMatch(
                                'TextInput heure fin_2'.Text,
                                "^(?:[01]?\d|2[0-3]):[0-5]\d$"
                            ),
                            isTimeOrderValid: DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_2'.Text) <
                                             DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_2'.Text),
                            
                            /*isDurationValid: IsMatch(
                                'TextInput duree interv_1'.Text,
                                "^((\d{1,2}:\d{2}h)|(\d{1,2}min))$"
                            ),*/
                            isNameCollectionValid: CountRows(NameCollection) > 0,
                            isPieceCollectionValid: CountRows(PieceCollection) > 0,
                            isAllInputsFilled: !IsBlank('DatePicker date_1'.SelectedDate) && 
                                               !IsBlank('TextInput heure debut_2'.Text) && 
                                               !IsBlank('TextInput heure fin_2'.Text) && 
                                               !IsBlank('Dropdown Equipement'.Selected),
                            areQuantitiesPositive: CountIf(PieceCollection, Value(Quantity) <= 0) = 0 // Convert Quantity to a number using Value()
                        }
                    );
                    
                    
                    
                    // Step 4: Conditional Patch and Notifications
                    /*
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isDurationValid && isNameCollectionValid && isPieceCollectionValid,
                        // All validations passed - Proceed with the Patch
                        ForAll(
                            NameCollection,
                            Patch(
                                Rapport_Intervention_correctif,
                                Defaults(Rapport_Intervention_correctif),
                                {
                                    'Reference du rapport Intervention': NewReferenceNumber,
                                    'Date intervention': 'DatePicker date_1'.SelectedDate,
                                    'Heure de debut': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_1'.Text),
                                    'Heure de fin': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_1'.Text),
                                    'Duree Intervention': 'TextInput duree interv_1'.Text,
                                    'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation,
                                    'Ressources Humaines Assignees': ThisRecord.Value // For each resource (human)
                                }
                            )
                        );
                        ForAll(
                            PieceCollection,
                            Patch(
                                Rapport_Intervention_correctif,
                                Defaults(Rapport_Intervention_correctif),
                                {
                                    'Reference du rapport Intervention': NewReferenceNumber,
                                    'Ressources Materielles Engagees': ThisRecord.Piece,
                                    'Quantite  Materielles Engagees': ThisRecord.Quantity
                                }
                            )
                        );
                        Notify(
                            "Data saved successfully!",
                            NotificationType.Success
                        )
                    );
                    */
                    
                    /*
                    
                    // mearly worked but no !!
                    
                    ClearCollect(
                        CombinedCollection,
                        AddColumns(
                            NameCollection,
                            'Material',
                            LookUp(
                                PieceCollection,
                                Piece = ThisRecord.Piece,
                                Piece
                            ),
                            'Quantity',
                            LookUp(
                                PieceCollection,
                                Quantity = ThisRecord.Quantity,
                                Quantity
                            )
                        )
                    );
                    
                    
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isDurationValid && isNameCollectionValid && isPieceCollectionValid,
                        // Set MainRecord with the main data
                        Set(
                            MainRecord,
                            {
                                'Reference du rapport Intervention': NewReferenceNumber,
                                'Date intervention': 'DatePicker date_1'.SelectedDate,
                                'Heure de debut': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_1'.Text),
                                'Heure de fin': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_1'.Text),
                                'Duree Intervention': 'TextInput duree interv_1'.Text,
                                'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation
                            }
                        );
                        // Patch combined data
                    // Patch combined data including human resources, materials, and quantities
                    // Step 2: Patch combined data including human resources, materials, and quantities
                    ForAll(
                            CombinedCollection,
                            Patch(
                                Rapport_Intervention_correctif,
                                Defaults(Rapport_Intervention_correctif),
                                {
                                    'Reference du rapport Intervention': NewReferenceNumber,
                                    'Date intervention': MainRecord.'Date intervention',
                                    'Heure de debut': MainRecord.'Heure de debut',
                                    'Heure de fin': MainRecord.'Heure de fin',
                                    'Duree Intervention': MainRecord.'Duree Intervention',
                                    'Equipement Concerne': MainRecord.'Equipement Concerne',
                                    'Ressources Humaines Assignees': ThisRecord.Value,
                                    'Ressources Materielles Engagees': ThisRecord.Material,
                                    'Quantite Materielles Engagees': ThisRecord.Quantity
                                }
                            )
                        );
                        // Notify user of successful data saving
                    Notify(
                            "Data saved successfully!",
                            NotificationType.Success
                        );
                        
                    );
                    
                    // mearly worked but no !!
                    
                    */
                    
                    // main solution for now better 1 >
                    
                    // Step 1: Create a record with the main intervention details
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isNameCollectionValid && isPieceCollectionValid && isTimeOrderValid && areQuantitiesPositive,
                    Set(
                        MainRecord,
                            {
                                'Reference du rapport Intervention': NewReferenceNumber,
                                'Date intervention': 'DatePicker date_1'.SelectedDate,
                                'Heure de debut': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_2'.Text),
                                'Heure de fin': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_2'.Text),
                                //'Duree Intervention': 'TextInput duree interv_1'.Text
                            // Calculate the duration in hours and minutes
                            /*'Duree Intervention': 
                                Text(
                                    RoundDown(
                                        DateDiff(
                                            DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_2'.Text), 
                                            DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_2'.Text),
                                            TimeUnit.Minutes
                                        ) / 60, 0
                                    ), "[$-en-US]00"
                                ) & ":" & 
                                Text(
                                    Mod(
                                        DateDiff(
                                            DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_2'.Text), 
                                            DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_2'.Text),
                                            TimeUnit.Minutes
                                        ), 60
                                    ), "[$-en-US]00"
                                ),*/
                                'Duree Intervention': Time(
                        Value(
                            Text(
                                RoundDown(
                                    DateDiff(
                                        DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_2'.Text),
                                        DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_2'.Text),
                                        TimeUnit.Minutes
                                    ) / 60,
                                    0
                                ),
                                "[$-en-US]00"
                            )
                        ),
                        Value(
                            Text(
                                Mod(
                                    DateDiff(
                                        DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_2'.Text),
                                        DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_2'.Text),
                                        TimeUnit.Minutes
                                    ),
                                    60
                                ),
                                "[$-en-US]00"
                            )
                        ),
                        0
                    ),
                                'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation
                            }
                        );
                    
                    
                        // Insert the mainRecord into RIC_for_manual_mvmnt //? this is mainly for showing data in the storekeeper manual repport mouvement screen witjout having duplicated data
                        Patch(
                            RIC_for_manual_mvmnt,
                            Defaults(RIC_for_manual_mvmnt),
                            {
                                'Reference du rapport Intervention': MainRecord.'Reference du rapport Intervention',
                                'Date intervention': MainRecord.'Date intervention',
                                'Heure de debut': MainRecord.'Heure de debut',
                                'Heure de fin': MainRecord.'Heure de fin',
                                'Duree Intervention': MainRecord.'Duree Intervention',
                                'Equipement Concerne': MainRecord.'Equipement Concerne'
                            }
                        );
                    
                    
                    // Step 2: Patch human resources (Ressources Humaines Assignees) including the main data in each row
                    ForAll(
                        NameCollection,
                        Patch(
                            Rapport_Intervention_correctif,
                            Defaults(Rapport_Intervention_correctif),
                            {
                                'Reference du rapport Intervention': NewReferenceNumber,
                                'Date intervention': MainRecord.'Date intervention',
                                'Heure de debut': MainRecord.'Heure de debut',
                                'Heure de fin': MainRecord.'Heure de fin',
                                'Duree Intervention': MainRecord.'Duree Intervention',
                                'Equipement Concerne': MainRecord.'Equipement Concerne',
                                'Ressources Humaines Assignees': ThisRecord.Value
                            }
                        )
                    );
                    // Step 3: Patch materials (Ressources Materielles Engagees) including the main data in each row
                    ForAll(
                        PieceCollection,
                        Patch(
                            Rapport_Intervention_correctif,
                            Defaults(Rapport_Intervention_correctif),
                            {
                                'Reference du rapport Intervention': NewReferenceNumber,
                                'Date intervention': MainRecord.'Date intervention',
                                'Heure de debut': MainRecord.'Heure de debut',
                                'Heure de fin': MainRecord.'Heure de fin',
                                'Duree Intervention': MainRecord.'Duree Intervention',
                                'Equipement Concerne': MainRecord.'Equipement Concerne',
                                'Ressources Materielles Engagees': ThisRecord.Piece,
                                'Quantite Materielles Engagees': ThisRecord.Quantity,
                                Status:"NOT YET APPROVED BY THE STORKEEPER"
                            }
                        )
                    );
                    // Notify user of successful data saving 1
                    
                    Notify(
                        "Data saved successfully!",
                        NotificationType.Success
                        );
                    
                        Set(openNewReportModal,true);
                    );
                    
                    
                    
                    
                    // Notify user of successful data saving 1
                    
                    
                    
                    
                    If(
                        !IsBlank(MainRecord),
                        Set(
                            isCorrectifSubmitted,
                            true
                        ),
                        Set(
                            isCorrectifSubmitted,
                            false
                        )
                    );
                    /*
                    
                    
                    // "Generate Mouvement Report" i am deleting this DATABASE : Generated_Repport
                    If(
                        isCorrectifSubmitted,
                        // Step 1: Get the Last Report
                        Set(
                            LastReport,
                            Last(Rapport_Intervention_correctif)
                        )
                    );
                        
                        // Step 2: Check if LastReport is not blank and then Patch each material in separate rows
                    If(
                        !IsBlank(LastReport),
                        
                        // Step 2a: For each item in the PieceCollection, patch it into a new row in Generated_Repport
                        ForAll(
                            PieceCollection,
                            Patch(
                                Generated_Repport,
                                Defaults(Generated_Repport),
                                {
                                    'Reference du rapport Intervention': LastReport.'Reference du rapport Intervention',
                                    'Ressources Materielles Engagees': ThisRecord.Piece,
                                    'Quantite Materielles Engagees': ThisRecord.Quantity
                                }
                            )
                        );
                        
                        // Notify user of successful report generation
                        Notify("Report generated successfully!", NotificationType.Success);
                        Set(openGeneratedModal,true);
                        // Clear the report flag
                        
                        //Set(NewReport, Blank()),
                        Set(LastReport, Blank()),
                    
                        // If no corrective data was found
                        Notify("Corrective data has not been submitted or is missing.", NotificationType.Error);
                    
                    );
                    
                    */
                    
                    
                    
                    // main solution for now better 1 ^
                    
                    
                    
                    // main solution for now >
                    /*
                    // Step 4: Patch the main intervention details in one row
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isDurationValid && isNameCollectionValid && isPieceCollectionValid,
                        // Patch the main intervention data (one row for the main details)
                        Patch(
                            Rapport_Intervention_correctif,
                            Defaults(Rapport_Intervention_correctif),
                            {
                                'Reference du rapport Intervention': NewReferenceNumber,
                                'Date intervention': 'DatePicker date_1'.SelectedDate,
                                'Heure de debut': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_1'.Text),
                                'Heure de fin': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_1'.Text),
                                'Duree Intervention': 'TextInput duree interv_1'.Text,
                                'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation
                            }
                        );
                        // Step 5: Patch human resources (Ressources Humaines Assignees)
                        ForAll(
                            NameCollection,
                            Patch(
                                Rapport_Intervention_correctif,
                                Defaults(Rapport_Intervention_correctif),
                                {
                                    'Reference du rapport Intervention': NewReferenceNumber,
                                    'Ressources Humaines Assignees': ThisRecord.Value
                                }
                            )
                        );
                        // Step 6: Patch materials (Ressources Materielles Engagees)
                        ForAll(
                            PieceCollection,
                            Patch(
                                Rapport_Intervention_correctif,
                                Defaults(Rapport_Intervention_correctif),
                                {
                                    'Reference du rapport Intervention': NewReferenceNumber,
                                    'Ressources Materielles Engagees': ThisRecord.Piece,
                                    'Quantite  Materielles Engagees': ThisRecord.Quantity
                                }
                            )
                        );
                        Notify(
                            "Data saved successfully!",
                            NotificationType.Success
                        )
                    );
                    */
                    // main solution for now ^
                    /* tried this one but didnt work it keeps overriding data 
                    // Step 4: Patch the main intervention details in one row
                    If(
                        isAllInputsFilled && isTimeDebutValid && isTimeFinValid && isDurationValid && isNameCollectionValid && isPieceCollectionValid,
                        // Patch the main intervention data (one row for the main details)
                    Set(
                        MainRecord,
                        Patch(
                            Rapport_Intervention_correctif,
                            Defaults(Rapport_Intervention_correctif),
                            {
                                'Reference du rapport Intervention': NewReferenceNumber,
                                'Date intervention': 'DatePicker date_1'.SelectedDate,
                                'Heure de debut': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure debut_1'.Text),
                                'Heure de fin': DateTimeValue(Text('DatePicker date_1'.SelectedDate) & " " & 'TextInput heure fin_1'.Text),
                                'Duree Intervention': 'TextInput duree interv_1'.Text,
                                'Equipement Concerne': 'Dropdown Equipement'.Selected.Désignation
                            }
                        )
                    );
                        // Step 5: Patch human resources (Ressources Humaines Assignees)
                    ForAll(
                        NameCollection,
                        Patch(
                            Rapport_Intervention_correctif,
                            MainRecord,
                            {
                                'Ressources Humaines Assignees': ThisRecord.Value
                            }
                        )
                    );
                        // Step 6: Patch materials (Ressources Materielles Engagees)
                    ForAll(
                        PieceCollection,
                        Patch(
                            Rapport_Intervention_correctif,
                            MainRecord,
                            {
                                'Ressources Materielles Engagees': ThisRecord.Piece,
                                'Quantite  Materielles Engagees': ThisRecord.Quantity
                            }
                        )
                    );
                    
                        // Notify success
                        Notify(
                            "Data saved successfully!",
                            NotificationType.Success
                        )
                    );
                    tried this one but didnt work it keeps overriding data */
                    // Step 5: Check if Patch was successful and update the boolean variable accordingly
                    If(
                        !IsBlank(NewReferenceNumber),
                        Set(
                            isCorrectifSubmitted,
                            true
                        ),
                        Set(
                            isCorrectifSubmitted,
                            false
                        )
                    );
                    // Step 6: Clear Collections and Inputs after saving
                    If(
                        isCorrectifSubmitted,
                        Clear(NameCollection);
                        Clear(PieceCollection);
                        //Clear(MainRecord);
                        Reset('DatePicker date_1');
                        Reset('TextInput heure debut_2');
                        Reset('TextInput heure fin_2');
                    );
                    // Step 7: Validation failed - Show corresponding notifications
                    // Check if all inputs are filled
                    If(
                        !isAllInputsFilled,
                        Notify(
                            "Please fill in all required fields.",
                            NotificationType.Error
                        )
                    );
                    
                    // Check if the start time (Heure de début) is valid
                    If(
                        !isTimeDebutValid,
                        Notify(
                            "Heure de début is not valid.",
                            NotificationType.Error
                        )
                    );
                    
                    // Check if the end time (Heure de fin) is valid
                    If(
                        !isTimeFinValid,
                        Notify(
                            "Heure de fin is not valid.",
                            NotificationType.Error
                        )
                    );
                    
                    // Check if the start time is before the end time
                    If(
                        !isTimeOrderValid,
                        Notify(
                            "Heure de début must be earlier than Heure de fin.",
                            NotificationType.Error
                        )
                    );
                    
                    // Check if at least one staff name is added
                    If(
                        !isNameCollectionValid,
                        Notify(
                            "Please add at least one staff name.",
                            NotificationType.Error
                        )
                    );
                    
                    // Check if at least one piece is added
                    If(
                        !isPieceCollectionValid,
                        Notify(
                            "Please add at least one piece.",
                            NotificationType.Error
                        )
                    );
                    
                    // Check if at qtes positive
                    
                    If(
                        !areQuantitiesPositive,
                        Notify("All quantities must be positive.", NotificationType.Error)
                    );
                    
                PressedBorderColor: =App.Theme.Colors.Darker40
                PressedColor: =Self.Color
                PressedFill: =App.Theme.Colors.Darker40
                Size: =15
                Text: ="Submit"
                Width: =Parent.Width * 0.3
                X: =586
                ZIndex: =3

    "'Dialog Container_4' As groupContainer.verticalAutoLayoutContainer":
        DropShadow: =DropShadow.Light
        Fill: |
            =RGBA(0, 0, 0, 0.3)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Visible: |-
            =//true
            openNewReportModal
        Width: =Parent.Width
        ZIndex: =2

        "'Dialog Content_8' As groupContainer.verticalAutoLayoutContainer":
            AlignInContainer: =AlignInContainer.Center
            DropShadow: =DropShadow.Bold
            Fill: =RGBA(214, 221, 224, 1)
            FillPortions: =0
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =10
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =5
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            ZIndex: =1

            "'cancel icon_8' As icon.CancelBadge":
                AlignInContainer: =AlignInContainer.End
                BorderColor: =App.Theme.Colors.Darker40
                Color: =App.Theme.Colors.Darker30
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Icon: =Icon.CancelBadge
                OnSelect: =Set(openNewReportModal,false)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =10
                PaddingTop: =5
                Width: =40
                ZIndex: =1

            message_new_rapport As Text:
                Align: ='TextCanvas.Align'.Center
                AlignInContainer: =AlignInContainer.Stretch
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                Size: =20
                Text: ="New Report added successfully"
                Weight: ='TextCanvas.Weight'.Bold
                Width: =96
                X: =0
                Y: =0
                ZIndex: =2

            "'sucs icon_6' As image":
                AlignInContainer: =AlignInContainer.Stretch
                BorderColor: =App.Theme.Colors.Darker40
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Height: =50
                Image: ='icons8-success-240'
                LayoutMinWidth: =50
                ZIndex: =3

